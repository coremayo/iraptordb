/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * searchRaptorGUI.java
 *
 * Created on Apr 8, 2009, 6:54:49 PM
 */

package iRaptorPackage;

import domain.*;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Michael
 */
public class searchRaptorGUI extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;
	DBUtil DB;

    /** Creates new form searchRaptorGUI */
    public searchRaptorGUI() {
        DB = new DBUtil();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        executeButton = new javax.swing.JButton();
        itemComboBox = new javax.swing.JComboBox();
        itemLabel = new javax.swing.JLabel();
        resultTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane(resultTable);
        fieldComboBox = new javax.swing.JComboBox();
        fieldLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        textLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        
        /*--------------------------------------------------------------
         * FOR TESTING PURPOSES (do not delete)
         */
        executeButton.setName("search item done button");
        resultTable.setName("all item table");
        itemComboBox.setName("search item combo box");
        searchTextField.setName("title text field");
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        executeButton.setText("Execute Search");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	executeButtonActionPerformed(evt);
            }
        });

        itemComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Movies", "Books", "Games", "CDs", "Any Item" }));
        fieldComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Genre", "Tags" }));
        

        itemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboBoxActionPerformed(evt);
            }
        });
        

        itemLabel.setText("Choose type of item to search for:");
     
        //fieldComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        fieldComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldComboBoxActionPerformed(evt);
            }
        });

        fieldLabel.setText("Choose the field to search within:");

        searchTextField.setText("");
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        
        textLabel.setText("Enter the text to search for:");

        resultLabel.setText("Results:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemLabel)
                .addContainerGap(229, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(319, Short.MAX_VALUE)
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(166, Short.MAX_VALUE)
                .addComponent(resultLabel)
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addComponent(executeButton)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textLabel)
                .addContainerGap(258, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(244, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addComponent(fieldComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(199, Short.MAX_VALUE)
                .addComponent(fieldLabel)
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(itemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(fieldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(executeButton)
                .addGap(37, 37, 37)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    private void itemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboBoxActionPerformed
    }//GEN-LAST:event_itemComboBoxActionPerformed

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void fieldComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldComboBoxActionPerformed
    	selectedFieldType = itemComboBox.getSelectedItem();
    }//GEN-LAST:event_fieldComboBoxActionPerformed
    
    
    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldComboBoxActionPerformed

    	String[] columnNames = {
    		"idNum",
    		"Title",
    		"Genre",
    		"Type"
    	};
    	
    	enteredText = searchTextField.getText();
    	selectedItemType = itemComboBox.getSelectedItem();
    	selectedFieldType = fieldComboBox.getSelectedItem();
    	if (enteredText.equals("")) {
        	JOptionPane.showMessageDialog( null, "Please enter something to search for");        	
        } else {
        	//else we can take the text in the text field and execute the search
    	
        	List<Item> results;
        	List<Item> updatedResults = new ArrayList<Item>();
        	if (selectedFieldType == "Title") {
        		results = SearchUtil.searchTitle(searchTextField.getText());
        	}
        	else if (selectedFieldType == "Genre"){
        		results = SearchUtil.searchGenre(searchTextField.getText());
        	}
//        	else if (selectedFieldType == "Tags"){
        	else {
        		results = SearchUtil.searchTag(searchTextField.getText());
        	}
        	
        	// execute the "search control" code
        	String type = "";
        	//"Movies", "Books", "Games", "CDs", "Any Item"
        	if (selectedItemType=="Movies") {
        		type = "DVD";
        	} else if (selectedFieldType=="Books"){
        		type = "Book";
        	} else if (selectedFieldType=="Games") {
        		type = "VideoGame";
        	} else if (selectedFieldType == "CDs") {
        		type = "CD";
        	}
        	
        	for (Item result : results) {
        		if (result.getType() == type) {
    				updatedResults.add(result);
        		}
    			if (selectedFieldType == "Any Item") {
    				updatedResults.add(result);
    			}
        	}
        	
        	int numRows = updatedResults.size();//the number of rows
        	int numCols = columnNames.length;//the numer of fields for a move/dvd
        	
        	String data[][] = new String[numRows][numCols];
        	
        	for(int row = 0; row < numRows; row++){
        		data[row][0] = ((Integer)updatedResults.get(row).getItemId()).toString();
        		data[row][1] = updatedResults.get(row).getTitle();
        		data[row][2] = updatedResults.get(row).getGenre();
        		data[row][3] = updatedResults.get(row).getType();
        	}

            jScrollPane1.setPreferredSize(new Dimension(350, 150));
        	
        	resultTable.setModel(new DefaultTableModel(data, columnNames));
        	resultTable.setVisible(true);
        	
        	///http://java.sun.com/docs/books/tutorial/uiswing/examples/components/SimpleTableDemoProject/src/components/SimpleTableDemo.java
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton executeButton;
    private javax.swing.JComboBox itemComboBox;
    private javax.swing.JComboBox fieldComboBox;
    private javax.swing.JLabel itemLabel;
    private javax.swing.JLabel fieldLabel;
    private javax.swing.JLabel textLabel;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultTable;
    private javax.swing.JTextField searchTextField;
    
    private Object selectedItemType;
    private Object selectedFieldType;
    private String enteredText;
   
    //List<Item> results; // = new ArrayList<Item>();
    // End of variables declaration//GEN-END:variables
    
  
    
}













